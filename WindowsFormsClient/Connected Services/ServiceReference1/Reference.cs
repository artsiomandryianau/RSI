//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsClient.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStream", ReplyAction="http://tempuri.org/IService1/GetStreamResponse")]
        System.IO.Stream GetStream(string nazwa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStream", ReplyAction="http://tempuri.org/IService1/GetStreamResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> GetStreamAsync(string nazwa);
        
        // CODEGEN: Generating message contract since the wrapper name (RequestFileMessage) of message RequestFileMessage does not match the default value (DownloadFile)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DownloadFile", ReplyAction="http://tempuri.org/IService1/DownloadFileResponse")]
        WindowsFormsClient.ServiceReference1.ResponseFileMessage DownloadFile(WindowsFormsClient.ServiceReference1.RequestFileMessage request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DownloadFile", ReplyAction="http://tempuri.org/IService1/DownloadFileResponse")]
        System.Threading.Tasks.Task<WindowsFormsClient.ServiceReference1.ResponseFileMessage> DownloadFileAsync(WindowsFormsClient.ServiceReference1.RequestFileMessage request);
        
        // CODEGEN: Generating message contract since the operation UploadFile is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UploadFile", ReplyAction="http://tempuri.org/IService1/UploadFileResponse")]
        WindowsFormsClient.ServiceReference1.UploadFileResponse UploadFile(WindowsFormsClient.ServiceReference1.ResponseFilePathMessage request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UploadFile", ReplyAction="http://tempuri.org/IService1/UploadFileResponse")]
        System.Threading.Tasks.Task<WindowsFormsClient.ServiceReference1.UploadFileResponse> UploadFileAsync(WindowsFormsClient.ServiceReference1.ResponseFilePathMessage request);
        
        // CODEGEN: Generating message contract since the operation UploadFile2 is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UploadFile2", ReplyAction="http://tempuri.org/IService1/UploadFile2Response")]
        WindowsFormsClient.ServiceReference1.UploadFile2Response UploadFile2(WindowsFormsClient.ServiceReference1.RequestPathMessage request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UploadFile2", ReplyAction="http://tempuri.org/IService1/UploadFile2Response")]
        System.Threading.Tasks.Task<WindowsFormsClient.ServiceReference1.UploadFile2Response> UploadFile2Async(WindowsFormsClient.ServiceReference1.RequestPathMessage request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ShowFile", ReplyAction="http://tempuri.org/IService1/ShowFileResponse")]
        string ShowFile();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ShowFile", ReplyAction="http://tempuri.org/IService1/ShowFileResponse")]
        System.Threading.Tasks.Task<string> ShowFileAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFilesList", ReplyAction="http://tempuri.org/IService1/GetFilesListResponse")]
        string[] GetFilesList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFilesList", ReplyAction="http://tempuri.org/IService1/GetFilesListResponse")]
        System.Threading.Tasks.Task<string[]> GetFilesListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFileLocationOnServer", ReplyAction="http://tempuri.org/IService1/GetFileLocationOnServerResponse")]
        string GetFileLocationOnServer(string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFileLocationOnServer", ReplyAction="http://tempuri.org/IService1/GetFileLocationOnServerResponse")]
        System.Threading.Tasks.Task<string> GetFileLocationOnServerAsync(string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFileLenght", ReplyAction="http://tempuri.org/IService1/GetFileLenghtResponse")]
        long GetFileLenght(string filename);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFileLenght", ReplyAction="http://tempuri.org/IService1/GetFileLenghtResponse")]
        System.Threading.Tasks.Task<long> GetFileLenghtAsync(string filename);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RequestFileMessage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RequestFileMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string nazwa1;
        
        public RequestFileMessage() {
        }
        
        public RequestFileMessage(string nazwa1) {
            this.nazwa1 = nazwa1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ResponseFileMessage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ResponseFileMessage {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string description;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string nazwa2;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public long rozmiar;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream dane;
        
        public ResponseFileMessage() {
        }
        
        public ResponseFileMessage(string description, string nazwa2, long rozmiar, System.IO.Stream dane) {
            this.description = description;
            this.nazwa2 = nazwa2;
            this.rozmiar = rozmiar;
            this.dane = dane;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ResponseFilePathMessage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ResponseFilePathMessage {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string description;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string path;
        
        public ResponseFilePathMessage() {
        }
        
        public ResponseFilePathMessage(string description, string name, string path) {
            this.description = description;
            this.name = name;
            this.path = path;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UploadFileResponse {
        
        public UploadFileResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RequestPathMessage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RequestPathMessage {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string descriptionFile;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream stream;
        
        public RequestPathMessage() {
        }
        
        public RequestPathMessage(string descriptionFile, string name, System.IO.Stream stream) {
            this.descriptionFile = descriptionFile;
            this.name = name;
            this.stream = stream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UploadFile2Response {
        
        public UploadFile2Response() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WindowsFormsClient.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WindowsFormsClient.ServiceReference1.IService1>, WindowsFormsClient.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.IO.Stream GetStream(string nazwa) {
            return base.Channel.GetStream(nazwa);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> GetStreamAsync(string nazwa) {
            return base.Channel.GetStreamAsync(nazwa);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WindowsFormsClient.ServiceReference1.ResponseFileMessage WindowsFormsClient.ServiceReference1.IService1.DownloadFile(WindowsFormsClient.ServiceReference1.RequestFileMessage request) {
            return base.Channel.DownloadFile(request);
        }
        
        public string DownloadFile(string nazwa1, out string nazwa2, out long rozmiar, out System.IO.Stream dane) {
            WindowsFormsClient.ServiceReference1.RequestFileMessage inValue = new WindowsFormsClient.ServiceReference1.RequestFileMessage();
            inValue.nazwa1 = nazwa1;
            WindowsFormsClient.ServiceReference1.ResponseFileMessage retVal = ((WindowsFormsClient.ServiceReference1.IService1)(this)).DownloadFile(inValue);
            nazwa2 = retVal.nazwa2;
            rozmiar = retVal.rozmiar;
            dane = retVal.dane;
            return retVal.description;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WindowsFormsClient.ServiceReference1.ResponseFileMessage> WindowsFormsClient.ServiceReference1.IService1.DownloadFileAsync(WindowsFormsClient.ServiceReference1.RequestFileMessage request) {
            return base.Channel.DownloadFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<WindowsFormsClient.ServiceReference1.ResponseFileMessage> DownloadFileAsync(string nazwa1) {
            WindowsFormsClient.ServiceReference1.RequestFileMessage inValue = new WindowsFormsClient.ServiceReference1.RequestFileMessage();
            inValue.nazwa1 = nazwa1;
            return ((WindowsFormsClient.ServiceReference1.IService1)(this)).DownloadFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WindowsFormsClient.ServiceReference1.UploadFileResponse WindowsFormsClient.ServiceReference1.IService1.UploadFile(WindowsFormsClient.ServiceReference1.ResponseFilePathMessage request) {
            return base.Channel.UploadFile(request);
        }
        
        public void UploadFile(string description, string name, string path) {
            WindowsFormsClient.ServiceReference1.ResponseFilePathMessage inValue = new WindowsFormsClient.ServiceReference1.ResponseFilePathMessage();
            inValue.description = description;
            inValue.name = name;
            inValue.path = path;
            WindowsFormsClient.ServiceReference1.UploadFileResponse retVal = ((WindowsFormsClient.ServiceReference1.IService1)(this)).UploadFile(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WindowsFormsClient.ServiceReference1.UploadFileResponse> WindowsFormsClient.ServiceReference1.IService1.UploadFileAsync(WindowsFormsClient.ServiceReference1.ResponseFilePathMessage request) {
            return base.Channel.UploadFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<WindowsFormsClient.ServiceReference1.UploadFileResponse> UploadFileAsync(string description, string name, string path) {
            WindowsFormsClient.ServiceReference1.ResponseFilePathMessage inValue = new WindowsFormsClient.ServiceReference1.ResponseFilePathMessage();
            inValue.description = description;
            inValue.name = name;
            inValue.path = path;
            return ((WindowsFormsClient.ServiceReference1.IService1)(this)).UploadFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WindowsFormsClient.ServiceReference1.UploadFile2Response WindowsFormsClient.ServiceReference1.IService1.UploadFile2(WindowsFormsClient.ServiceReference1.RequestPathMessage request) {
            return base.Channel.UploadFile2(request);
        }
        
        public void UploadFile2(string descriptionFile, string name, System.IO.Stream stream) {
            WindowsFormsClient.ServiceReference1.RequestPathMessage inValue = new WindowsFormsClient.ServiceReference1.RequestPathMessage();
            inValue.descriptionFile = descriptionFile;
            inValue.name = name;
            inValue.stream = stream;
            WindowsFormsClient.ServiceReference1.UploadFile2Response retVal = ((WindowsFormsClient.ServiceReference1.IService1)(this)).UploadFile2(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WindowsFormsClient.ServiceReference1.UploadFile2Response> WindowsFormsClient.ServiceReference1.IService1.UploadFile2Async(WindowsFormsClient.ServiceReference1.RequestPathMessage request) {
            return base.Channel.UploadFile2Async(request);
        }
        
        public System.Threading.Tasks.Task<WindowsFormsClient.ServiceReference1.UploadFile2Response> UploadFile2Async(string descriptionFile, string name, System.IO.Stream stream) {
            WindowsFormsClient.ServiceReference1.RequestPathMessage inValue = new WindowsFormsClient.ServiceReference1.RequestPathMessage();
            inValue.descriptionFile = descriptionFile;
            inValue.name = name;
            inValue.stream = stream;
            return ((WindowsFormsClient.ServiceReference1.IService1)(this)).UploadFile2Async(inValue);
        }
        
        public string ShowFile() {
            return base.Channel.ShowFile();
        }
        
        public System.Threading.Tasks.Task<string> ShowFileAsync() {
            return base.Channel.ShowFileAsync();
        }
        
        public string[] GetFilesList() {
            return base.Channel.GetFilesList();
        }
        
        public System.Threading.Tasks.Task<string[]> GetFilesListAsync() {
            return base.Channel.GetFilesListAsync();
        }
        
        public string GetFileLocationOnServer(string fileName) {
            return base.Channel.GetFileLocationOnServer(fileName);
        }
        
        public System.Threading.Tasks.Task<string> GetFileLocationOnServerAsync(string fileName) {
            return base.Channel.GetFileLocationOnServerAsync(fileName);
        }
        
        public long GetFileLenght(string filename) {
            return base.Channel.GetFileLenght(filename);
        }
        
        public System.Threading.Tasks.Task<long> GetFileLenghtAsync(string filename) {
            return base.Channel.GetFileLenghtAsync(filename);
        }
    }
}
